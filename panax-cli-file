#!/usr/bin/env node

var chalk = require('chalk');
var program = require('commander');
var path = require('path');
var fs = require('fs');
var exec = require('child_process').exec;

program
	.usage('<file.js>')
	.parse(process.argv);

if (!process.argv.slice(2).length) {
  program.help();
}

// Require JSON Config
var jsonPath = path.join(__dirname, program.args[0]);
var json = require(jsonPath);

// if (!json.config) {
// 	console.error(chalk.red('Error: No config found!'));
// 	process.exit(1);
// }

/**
 * PanaxJS call
 */
// var Panax = require('panaxjs');
// var panax_config = require('./config/panax');
// var oPanax = new Panax(panax_config);

console.log('Applying Panax configuration from ' + chalk.bold.blue(jsonPath) + ':');

// Apply config if present
if (json.config) {
	for(var ent in json.config) {
		for(var col in json.config[ent]) {
			for(var prop in json.config[ent][col]) {
				// Dup from panax-cli-config-add
				// oPanax.tableConfig(args, function (err, response) {
				// 	if(err) {
				// 		console.error(chalk.red('Error: ') + err);
				// 		process.exit(1);
				// 	}

					console.log(chalk.bold.green('ADD') + ':\t' +
						chalk.bold.white('\'' + ent + '\'') + ', ' +
						chalk.blue('\'' + col + '\'') + ', ' +
						chalk.cyan('\'' + prop + '\'') + ', ' +
						'\'' + json.config[ent][col][prop] + '\''
					);
				// });
			}
		}
	}
}

// Clear cache if present
if (json.clearCache) {
	if(json.clearCache==='all') {
		for(var ent in json.config) {
			// ToDo: clearCache json.config[ent]
		}
	} else if (typeof(json.clearCache)==='array') {
		// ToDo: Clear configuration for array of individual entities
	}
}